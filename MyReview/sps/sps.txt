USE [MyReview]
GO

/****** Object:  Table [dbo].[ReviewDetails]    Script Date: 5/20/2019 3:32:00 PM ******/
DROP TABLE [dbo].[ReviewDetails]
GO

/****** Object:  Table [dbo].[ReviewDetails]    Script Date: 5/20/2019 3:32:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[ReviewDetails](
	[ReviewId] [bigint] IDENTITY(1,1) NOT NULL,
	[CategoryId] [bigint] NOT NULL,
	[SubCategoryId] [bigint] NOT NULL,
	[UserId] [bigint] NOT NULL,
	[ProductRate] [numeric](4, 2) NULL,
	[AvgStarRate] [numeric](5, 2) NULL,
	[TotalLikes] [int] NULL,
	[ReviewTitle] [varchar](250) NOT NULL,
	[ReviewDescription] [varchar](max) NOT NULL,
	[IsLikeProduct] [bit] NULL,
	[IsApproved] [bit] NOT NULL,
	[FileName] [varchar](50) NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
 CONSTRAINT [PK_ReviewDetails] PRIMARY KEY CLUSTERED 
(
	[ReviewId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO
********************************************************************
USE [MyReview]
GO

/****** Object:  StoredProcedure [dbo].[InsertReviewDetails]    Script Date: 5/20/2019 3:32:26 PM ******/
DROP PROCEDURE [dbo].[InsertReviewDetails]
GO

/****** Object:  StoredProcedure [dbo].[InsertReviewDetails]    Script Date: 5/20/2019 3:32:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[InsertReviewDetails]   
    @pCatID nvarchar(50),
	@pSubCatID nvarchar(50),	   
    @pUserID nvarchar(150),   
	@pProductRate numeric(4,2),
	@pReviewTitle nvarchar(100),
	@pReviewDes nvarchar (250),
	@pIsLikeProduct bit,
	@pFileName nvarchar(50) 
AS
	INSERT INTO [dbo].[ReviewDetails]
           ([CategoryId]
           ,[SubCategoryId]
           ,[UserId]
           ,[ProductRate]
           ,[ReviewTitle]
           ,[ReviewDescription]
		   ,[IsLikeProduct]
		   ,[IsApproved]
           ,[FileName]
           ,[CreatedBy]
           ,[CreatedDate])
     VALUES
           (@pCatID
           ,@pSubCatID
           ,@pUserID
           ,@pProductRate
           ,@pReviewTitle
           ,@pReviewDes
		   ,@pIsLikeProduct
		   ,1
           ,@pFileName
           ,@pUserID
           ,Getdate()) 
 

GO


************************
SERACH

USE [MyReview]
GO

/****** Object:  StoredProcedure [dbo].[SearchProducts]    Script Date: 5/20/2019 3:33:26 PM ******/
DROP PROCEDURE [dbo].[SearchProducts]
GO

/****** Object:  StoredProcedure [dbo].[SearchProducts]    Script Date: 5/20/2019 3:33:26 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SearchProducts]
	@prodname    nvarchar
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	--select * from [dbo].[SubCategory] where [SubCategoryName] LIKE '%gggg%' OR [Description]
	SELECT SC.[SubCategoryId] 
      ,SC.[SubCategoryName]
      ,SC.[Description]
      ,SC.[ImageName]
      ,SC.[CategoryId]
      
  FROM [dbo].[SubCategory] SC
  Inner Join Category C 
  ON SC.CategoryId = C.CategoryId 
  where SC.SubCategoryName LIKE  @prodname + '%' AND SC.[Description]  LIKE '%'+  @prodname + '%'
  --where contains(SC.SubCategoryName, @prodname)  OR contains(SC.[Description], @prodname)
  --where SC.SubCategoryName LIKE '%' + @prodname + '%' OR SC.[Description]  LIKE '%' + @prodname + '%'
     
END

GO


USE [MyReview]
GO

/****** Object:  StoredProcedure [dbo].[GetTop4ProductReviews]    Script Date: 5/23/2019 9:59:58 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[GetTop4ProductReviews]
	--@prodname    nvarchar
AS
BEGIN
	SET NOCOUNT ON;
   
	SELECT  TOP 4 SC.[SubCategoryId] 
      ,SC.[SubCategoryName]
      ,SC.[Description]
      ,SC.[ImageName]
      ,SC.[CategoryId]
	  ,RD.[ProductRate]
	  ,RD.ReviewDescription
	  ,RD.ReviewTitle
	  ,RD.ReviewId,
	  RD.[CreatedDate]
	  ,dbo.[ufngethrmin]('2019-05-20 22:00:00.000')AS PublishedSince
	  ,GETDATE() AS todaysDate
	  
      
  FROM [dbo].[SubCategory] SC
  Inner JOIN Category C  ON SC.CategoryId = C.CategoryId 
  Inner JOIN ReviewDetails RD ON RD.SubCategoryId =SC.SubCategoryId


  --,CONVERT(varchar(5),DATEADD(minute,DATEDIFF(minute,RD.[CreatedDate],GETDATE()),0), 114) As PublishedSince
  
END

GO
************************************************************************

USE [MyReview]
GO

/****** Object:  UserDefinedFunction [dbo].[ufngethrmin]    Script Date: 5/23/2019 10:01:13 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[ufngethrmin](@CreateDate datetime)  
RETURNS nvarchar(50)   
AS   
-- Returns the stock level for the product.  '2019-05-20 22:00:00.000'
BEGIN  
   	declare @dt1 datetime, @dt2 datetime, @Seconds int,@hrmin nvarchar(50)
select @dt1=@CreateDate, @dt2 =getdate()
set @Seconds=datediff(second, @dt1, @dt2)


    declare @Hour nvarchar(50)
    declare @Min nvarchar(50)
    declare @MinTemp int        
    if @Seconds >0 
    begin
    set @Hour=cast((@Seconds / 3600) as nvarchar(20)) +' Hours '
    set @MinTemp= (@Seconds % 3600) / 60
    set @Min=cast(@MinTemp as nvarchar(20))
    if  @MinTemp<10 
        SET @hrmin =@Hour+'0'+@Min +' min ago'
    else
        SET @hrmin = @Hour+@Min +' min ago'
    end
    else 
    SET @hrmin = '00 Hours 00 min'

	RETURN @hrmin 
END; 
GO


USE [MyReview]
GO
/****** Object:  StoredProcedure [dbo].[InsertVoteDetails]    Script Date: 6/4/2019 10:34:01 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[InsertVoteDetails] 
    @reviewID int,
	@UserId int,
	@IsLike bit,
	@StarRate numeric(4,2)

	
AS  

BEGIN TRANSACTION

INSERT INTO [dbo].[Vote]
           ([ReviewId]
           ,[UserId]
           ,[IsLike]
           ,[StarRate])
     VALUES
           (@reviewID, @UserId,@IsLike,@StarRate)
           

-- Rollback the transaction if there were any errors
IF @@ERROR <> 0
 BEGIN
    -- Rollback the transaction
    ROLLBACK

    -- Raise an error and return
    RAISERROR ('Error in inserting reviews.', 16, 1)
    RETURN
 END
ELSE
  BEGIN
  --- Update review Table
  declare @totallikes int ,@numofreviews int ,@AvgStar numeric(5,2)

  Select @totallikes = count(*) from [dbo].[Vote] where [ReviewId] =@reviewID And [IsLike] =1
  select @numofreviews =count(*) from [dbo].[Vote] where [ReviewId] = @reviewID
  Select @AvgStar = SUM([StarRate])/ @numofreviews from [dbo].[Vote] where [ReviewId] = @reviewID
     UPDATE [dbo].[ReviewDetails]
   SET 
      [AvgStarRate] = @AvgStar,
      [TotalLikes] = @totallikes      
      WHERE [ReviewId] = @reviewID
  END

COMMIT

/*========================================*/

USE [MyReview]
GO
/****** Object:  StoredProcedure [dbo].[InsertVoteDetails]    Script Date: 6/5/2019 8:53:51 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[InsertVoteDetails] 
    @reviewID int,
	@UserId int,
	@IsLike bit,
	@StarRate numeric(4,2)

	
AS  

BEGIN TRANSACTION

INSERT INTO [dbo].[Vote]
           ([ReviewId]
           ,[UserId]
           ,[IsLike]
           ,[StarRate])
     VALUES
           (@reviewID, @UserId,@IsLike,@StarRate)
           

-- Rollback the transaction if there were any errors
IF @@ERROR <> 0
 BEGIN
    -- Rollback the transaction
    ROLLBACK

    -- Raise an error and return
    RAISERROR ('Error in inserting reviews.', 16, 1)
    RETURN
 END
ELSE
  BEGIN
  --- Update review Table
  declare @totallikes int ,@numofreviews int ,@AvgStar numeric(5,2)

  Select @totallikes = count(*) from [dbo].[Vote] where [ReviewId] =@reviewID And [IsLike] =1
  select @numofreviews =count(*) from [dbo].[Vote] where [ReviewId] = @reviewID
  Select @AvgStar = SUM([StarRate])/ @numofreviews from [dbo].[Vote] where [ReviewId] = @reviewID
     UPDATE [dbo].[ReviewDetails]
   SET 
      [AvgStarRate] = @AvgStar,
      [TotalLikes] = @totallikes      
      WHERE [ReviewId] = @reviewID
  END

COMMIT


/*============================================*/

USE [MyReview]
GO
/****** Object:  StoredProcedure [dbo].[AllReviews]    Script Date: 6/5/2019 8:54:34 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AllReviews]
	@UserID    int
AS
BEGIN
	SET NOCOUNT ON;
   
	SELECT SC.[SubCategoryId] 
      ,SC.[SubCategoryName]
      ,SC.[Description]
      ,SC.[ImageName]
      ,RD.[ProductRate]
	  ,RD.ReviewDescription
	  ,RD.ReviewTitle
	  ,RD.ReviewId
	  ,UM.UserId	  
      
  FROM [dbo].[SubCategory] SC
  Inner JOIN Category C  ON SC.CategoryId = C.CategoryId 
  Inner JOIN ReviewDetails RD ON RD.SubCategoryId =SC.SubCategoryId
  Inner Join UserMaster UM  ON UM.UserId =RD.UserId
  where UM.UserId =@UserID
  
END 
 
/*============================================*/


USE [MyReview]
GO
/****** Object:  StoredProcedure [dbo].[GetTrendingReviews]    Script Date: 6/5/2019 8:56:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetTrendingReviews]
	--@prodname    nvarchar
AS
BEGIN
	SET NOCOUNT ON;
   
	SELECT SC.[SubCategoryId] 
      ,SC.[SubCategoryName]
      ,SC.[Description]
      ,SC.[ImageName]
      ,SC.[CategoryId]
	  ,SC.[IsTrending]
	  , (Select Count(*) from [dbo].[ReviewDetails] RD1 
	      where RD1.SubCategoryId =Sc.SubCategoryId) As NumberofReviews     
	 FROM [dbo].[SubCategory] SC Where SC.[IsTrending]=1

  
END


*******************************************************************


USE [MyReview]
GO
/****** Object:  StoredProcedure [dbo].[ReadMoreReviews]    Script Date: 6/5/2019 8:57:55 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ReadMoreReviews]
	@reviewID    int
AS
BEGIN
	SET NOCOUNT ON;
	declare @totallikes int
   Select @totallikes = count(*) from [dbo].[Vote] where [ReviewId] =@reviewID And [IsLike] =1
	SELECT  SC.[SubCategoryId] 
      ,SC.[SubCategoryName]
      ,SC.[ImageName]
      ,RD.ReviewId
	  ,RD.[ProductRate]
	  ,RD.ReviewDescription
	  ,RD.ReviewTitle
	  ,UM.Photo
	  ,UM.UserName
	  ,UM.Email
	  ,@totallikes as votes
	  
  FROM [dbo].[SubCategory] SC
  Inner JOIN Category C  ON SC.CategoryId = C.CategoryId 
  Inner JOIN ReviewDetails RD ON RD.SubCategoryId =SC.SubCategoryId
  Inner Join UserMaster UM  ON UM.UserId =RD.UserId
  Where RD.ReviewId = @reviewID 

END

--ReadMoreReviews 2

**************************************************************







